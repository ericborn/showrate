setwd("c:/appt")
install.packages('rpart')
install.packages('rattle')
install.packages('rpart.plot')
install.packages('RColorBrewer')
install.packages('randomForest')
install.packages('party')
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(randomForest)
library(party)
train <- read.csv("apptdata.csv")
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(train)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
train$tod <- 0 #morning 7-11:30
train$tod[train$begintime < 1500 & train$begintime >= 1140] <- 1 #mid day 1140-3
train$tod[train$begintime >= 1510] <- 2 #evening 3:10-7
str(train)
View(train)
View(train)
train$tod[train$begintime < 1500 & train$begintime >= 1140] <- 1 #mid day 1140-3
train$tod[train$time < 1500 & train$time >= 1140] <- 1 #mid day 1140-3
train$tod[train$time >= 1510] <- 2 #evening 3:10-7
test$tod <- 0 #morning 7-11:30
test$tod[test$time < 1500 & test$time >= 1140] <- 1 #mid day 1140-3
test$tod[test$time >= 1510] <- 2 #evening 3:10-7
train$age2 <- 0
train$age2[train$Age >= 17 & train$Age <=21] <- 1
train$age2[train$Age >= 22 & train$Age <=25] <- 2
train$age2[train$Age >= 26 & train$Age <=30] <- 3
train$age2[train$Age >= 31] <- 4
test$age2 <- 0
test$age2[test$Age >= 17 & test$Age <=21] <- 1
test$age2[test$Age >= 22 & test$Age <=25] <- 2
test$age2[test$Age >= 26 & test$Age <=30] <- 3
test$age2[test$Age >= 31] <- 4
train$appt2 <- 0
train$appt2[train$apptDiff >= 0 & train$apptDiff <= 1] <- 1
train$appt2[train$apptDiff >= 2 & train$apptDiff <= 3] <- 2
train$appt2[train$apptDiff >= 4 & train$apptDiff <= 6] <- 3
train$appt2[train$apptDiff >= 7] <- 4
test$appt2 <- 0
test$appt2[test$apptDiff >= 0 & test$apptDiff <= 1] <- 1
test$appt2[test$apptDiff >= 2 & test$apptDiff <= 3] <- 2
test$appt2[test$apptDiff >= 4 & test$apptDiff <= 6] <- 3
test$appt2[test$apptDiff >= 7] <- 4
train$age2[train$age >= 17 & train$age <=21] <- 1
train$age2 <- 0
train$age2[train$age >= 17 & train$age <=21] <- 1
train$age2[train$age >= 22 & train$age <=25] <- 2
train$age2[train$age >= 26 & train$age <=30] <- 3
train$age2[train$age >= 31] <- 4
test$age2 <- 0
test$age2[test$age >= 17 & test$age <=21] <- 1
test$age2[test$age >= 22 & test$age <=25] <- 2
test$age2[test$age >= 26 & test$age <=30] <- 3
test$age2[test$age >= 31] <- 4
train$riskLevel[train$risk == 'Low'] <- 0
train$riskLevel[train$risk == 'Low-Medium'] <- 1
train$riskLevel[train$risk == 'Medium'] <- 2
train$riskLevel[train$risk == 'Medium-High'] <- 3
train$riskLevel[train$risk == 'High'] <- 4
test$riskLevel[test$risk == 'Low'] <- 0
test$riskLevel[test$risk == 'Low-Medium'] <- 1
test$riskLevel[test$risk == 'Medium'] <- 2
test$riskLevel[test$risk == 'Medium-High'] <- 3
test$riskLevel[test$risk == 'High'] <- 4
table(train$kept)
prop.table(table(train$kept))
prop.table(table(train$sex, train$kept), 1)
aggregate(kept ~ age2 + tod, data=train, FUN=function(x) round({sum(x)/length(x) * 100}))
aggregate(kept ~ riskLevel + tod, data=train, FUN=function(x) round({sum(x)/length(x) * 100}))
fit <- rpart(kept ~ riskLevel + tod + age2 + appt2,
data=train,
method="class")
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type = "class")
predict <- data.frame(kept = test$kept, keptPred = Prediction)
predict$accu[predict$kept == predict$keptPred] <- 1
predict$accu[predict$kept != predict$keptPred] <- 0
prop.table(table(predict$accu))
set.seed(299)
fit <- randomForest(as.factor(kept) ~ age2 + riskLevel + tod + location_name + event + apptDiff,
data = test,
importance=TRUE,
ntree=2000)
fit <- randomForest(as.factor(kept) ~ age2 + risk + tod + loc + event + apptDiff,
data = test,
importance=TRUE,
ntree=2000)
varImpPlot(fit)
View(predict)
fancyRpartPlot(fit)
Prediction <- predict(fit, test)
predict <- data.frame(kept = test$kept, keptPred = Prediction)
predict$accu[predict$kept == predict$keptPred] <- 1
predict$accu[predict$kept != predict$keptPred] <- 0
prop.table(table(predict$accu))
plot(cars)
plot(cars)
View(fit)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(train)
View(test)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(train)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(train)
View(train)
View(test)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(train)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(train)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(test)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(test)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(test)
train <- read.csv("appt_train.csv")
test <- read.csv("appt_test.csv")
str(test)
train$tod <- 0 #morning 7-11:30
train$tod[train$time < 1500 & train$time >= 1140] <- 1 #mid day 1140-3
train$tod[train$time >= 1510] <- 2 #evening 3:10-7
test$tod <- 0 #morning 7-11:30
test$tod[test$time < 1500 & test$time >= 1140] <- 1 #mid day 1140-3
test$tod[test$time >= 1510] <- 2 #evening 3:10-7
train$tod <- 0 #morning 7-11:30
train$tod[train$time < 1500 & train$time >= 1140] <- 1 #mid day 1140-3
train$tod[train$time >= 1510] <- 2 #evening 3:10-7
test$tod <- 0 #morning 7-11:30
test$tod[test$time < 1500 & test$time >= 1140] <- 1 #mid day 1140-3
test$tod[test$time >= 1510] <- 2 #evening 3:10-7
str(test)
#creating age buckets
train$age2 <- 0
train$age2[train$age >= 17 & train$age <=21] <- 1
train$age2[train$age >= 22 & train$age <=25] <- 2
train$age2[train$age >= 26 & train$age <=30] <- 3
train$age2[train$age >= 31] <- 4
test$age2 <- 0
test$age2[test$age >= 17 & test$age <=21] <- 1
test$age2[test$age >= 22 & test$age <=25] <- 2
test$age2[test$age >= 26 & test$age <=30] <- 3
test$age2[test$age >= 31] <- 4
#create column for grouping creation of appointment and date of appointment
train$appt2 <- 0
train$appt2[train$apptDiff >= 0 & train$apptDiff <= 3] <- 1
train$appt2[train$apptDiff >= 4 & train$apptDiff <= 8] <- 2
train$appt2[train$apptDiff >= 9 & train$apptDiff <= 15] <- 3
train$appt2[train$apptDiff >= 16] <- 4
test$appt2 <- 0
test$appt2[test$apptDiff >= 0 & test$apptDiff <= 3] <- 1
test$appt2[test$apptDiff >= 4 & test$apptDiff <= 8] <- 2
test$appt2[test$apptDiff >= 9 & test$apptDiff <= 15] <- 3
test$appt2[test$apptDiff >= 16] <- 4
#converting patient no-show risk to numeric values
train$riskLevel[train$risk == 'Low'] <- 0
train$riskLevel[train$risk == 'Low-Medium'] <- 1
train$riskLevel[train$risk == 'Medium'] <- 2
train$riskLevel[train$risk == 'Medium-High'] <- 3
train$riskLevel[train$risk == 'High'] <- 4
test$riskLevel[test$risk == 'Low'] <- 0
test$riskLevel[test$risk == 'Low-Medium'] <- 1
test$riskLevel[test$risk == 'Medium'] <- 2
test$riskLevel[test$risk == 'Medium-High'] <- 3
test$riskLevel[test$risk == 'High'] <- 4
#creating age buckets
train$age2 <- 0
train$age2[train$age >= 17 & train$age <=21] <- 1
train$age2[train$age >= 22 & train$age <=25] <- 2
train$age2[train$age >= 26 & train$age <=30] <- 3
train$age2[train$age >= 31] <- 4
test$age2 <- 0
test$age2[test$age >= 17 & test$age <=21] <- 1
test$age2[test$age >= 22 & test$age <=25] <- 2
test$age2[test$age >= 26 & test$age <=30] <- 3
test$age2[test$age >= 31] <- 4
#create column for grouping creation of appointment and date of appointment
train$appt2 <- 0
train$appt2[train$apptDiff >= 0 & train$apptDiff <= 3] <- 1
train$appt2[train$apptDiff >= 4 & train$apptDiff <= 8] <- 2
train$appt2[train$apptDiff >= 9 & train$apptDiff <= 15] <- 3
train$appt2[train$apptDiff >= 16] <- 4
test$appt2 <- 0
test$appt2[test$apptDiff >= 0 & test$apptDiff <= 3] <- 1
test$appt2[test$apptDiff >= 4 & test$apptDiff <= 8] <- 2
test$appt2[test$apptDiff >= 9 & test$apptDiff <= 15] <- 3
test$appt2[test$apptDiff >= 16] <- 4
#converting patient no-show risk to numeric values
train$riskLevel[train$risk == 'Low'] <- 0
train$riskLevel[train$risk == 'Low-Medium'] <- 1
train$riskLevel[train$risk == 'Medium'] <- 2
train$riskLevel[train$risk == 'Medium-High'] <- 3
train$riskLevel[train$risk == 'High'] <- 4
test$riskLevel[test$risk == 'Low'] <- 0
test$riskLevel[test$risk == 'Low-Medium'] <- 1
test$riskLevel[test$risk == 'Medium'] <- 2
test$riskLevel[test$risk == 'Medium-High'] <- 3
test$riskLevel[test$risk == 'High'] <- 4
str(train)
table(train$kept)
table(train$kept)
prop.table(table(train$kept))
table(train$kept)
prop.table(table(train$kept, 1))
table(train$kept)
mytable <- table(train$kept)
margin.table(mytable, 1)
prop.table(table(train$kept))
table(train$kept)
percent <- train$kept / rowSums(train$kept) * 100
table(train$kept)
head(train$kept)
#percent <- train$kept / rowSums(train$kept) * 100
table(train$kept)
head(train$kept)
rowSums(train$kept)
table(train$kept)
x <- train$kept
head(x)
rowSums(x)
#table(train$kept)
x <- train$kept
head(x)
#rowSums(x)
#table(train$kept)
x <- train$kept
head(x)
colSums(x)
#table(train$kept)
x <- train$kept
head(x)
rowSums(x)
#table(train$kept)
x <- train$kept
head(x)
rowSums(x[drop=FALSE])
#table(train$kept)
x <- train$kept
head(x)
#rowSums(traint[,drop=FALSE])
#table(train$kept)
x <- train$kept
head(x)
sum(x)
#table(train$kept)
x <- train$kept
head(x)
sum(train$kept)
sum(train$kept) / sum(train$kept) * 100
print(sum(train$kept) / sum(train$kept) * 100)
sum(train$kept)
#/ sum(train$kept) * 100)
sum(train$kept) * 100
#/ sum(train$kept) * 100)
sum(train$kept) / length(train$kept)
#/ sum(train$kept) * 100)
table(train$kept)
prop.table(table(train$kept))
sum(train$kept) / length(train$kept)
#table(train$kept)
#prop.table(table(train$kept))
#sum(train$kept) / length(train$kept)
unique(train$kept)
table(train$kept)
prop.table(table(train$kept))
sum(train$kept) / length(train$kept)
table(train$kept)
prop.table(table(train$kept))
aggregate(kept ~ age2 + tod, data=train, FUN=function(x) round({sum(x)/length(x) * 100}))
agg <- aggregate(kept ~ age2 + tod, data=train, FUN=function(x) round({sum(x)/length(x) * 100}))
agg <- aggregate(kept ~ age2 + tod, data=train, FUN=function(x) round({sum(x)/length(x) * 100}))
print(agg)
View(agg)
y <- factor(rep(letters[1:5], each = 4))
t <- 1:20
tapply(t, y, sum)
tapply(agg$kept,agg$tod, avg)
tapply(agg$kept.average,agg$tod)
agg$kept.average
tapply(agg$kept,agg$tod, mean)
agg <- aggregate(kept ~ age2 + tod, data=train, FUN=function(x) round({sum(x)/length(x) * 100}))
print(agg)
tapply(agg$kept,agg$tod, mean)
tapply(agg$kept,agg$tod, mean)
agg <- aggregate(kept ~ age2 + tod, data=train, FUN=function(x) round({sum(x)/length(x) * 100}))
print(agg)
tapply(agg$kept,agg$tod, mean)
tapply(agg$age2,agg$tod, mean)
tapply(agg$kept, agg$tod, mean)
tapply(agg$kept, agg$age2, mean)
